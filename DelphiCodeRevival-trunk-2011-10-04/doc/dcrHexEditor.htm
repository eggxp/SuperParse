<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<META name="GENERATOR" content="DIPasDoc 0.8.10">
<TITLE>dcrHexEditor</TITLE>
<LINK rel="StyleSheet" href="Help.css">
</HEAD>
<BODY bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#800080" alink="#FF0000">
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="e0e0e0">
<TD><A href="AllUnits.htm"><CENTER>Units</CENTER></A></TD>
<TD><A href="ClassHierarchy.htm"><CENTER>Class Hierarchy</CENTER></A></TD>
<TD><A href="AllClass.htm"><CENTER>Classes, Interfaces and Objects</CENTER></A></TD>
<TD><A href="AllTypes.htm"><CENTER>Types</CENTER></A></TD>
<TD><A href="AllEnums.htm"><CENTER>Enumerations</CENTER></A></TD>
<TD><A href="AllVaria.htm"><CENTER>Variables</CENTER></A></TD>
<TD><A href="AllConst.htm"><CENTER>Constants</CENTER></A></TD>
<TD><A href="AllFuncs.htm"><CENTER>Functions and Procedures</CENTER></A></TD>
<TD><A href="AllIdent.htm"><CENTER>Identifiers</CENTER></A></TD>
</TR>
</TABLE>
<H1>Unit dcrHexEditor</H1>
<H2>Description</H2>
TMPHexEditor displays and edits binary files in hexadecimal notation<P>TMPHexEditor v 07-10-2010<br> credits to :<br><br> - John Hamm, http://users.snapjax.com/john/<br><br> - Christophe Le Corfec for introducing the EBCDIC format and the nice idea about half byte insert/delete<br><br> - Philippe Chessa for his suggestions about AsText, AsHex and better support for the french keyboard layout<br><br> - Daniel Jensen for octal offset display and the INS-key recognition stuff<br><br> - Shmuel Zeigerman for introducing more flexible offset display formats<br><br> - Vaf, http://carradio.al.ru for reporting missing delver.inc and suggesting OnChange<br><br> - Eugene Tarasov for reporting that setting the BytesPerColumn value to 4 at design time didn't work<br><br> - FuseBurner for BytesPerUnit/RulerBytesPerUnit related suggestions<br><br> - Motzi for SyncView/ShowPositionIfNotFocused related suggestions<br><br> - Martin Hsiao for bcb compatibility and reporting some bugs when moving cursor beyond eof<br><br> - Miyu for delphi 7 defines<br><br> - Nils Hoyer for bcb testing, his help on creating a BCB6 package and standard actions support<br><br> - Skamnitsly S.V for reporting a bug when doubleclicking the ruler bar<br><br> - Pete Fraser for reporting problems with array properties under BCB<br><br> - Andrew Novikov for bug reports and suggestions<br><br> - Al for bug reports<br><br> - Dieter K&ouml;hler for reporting the delphi vcl related CanFocus bug<br><br> - Piotr Likus for reporting a cardinal&lt;-&gt;integer related bug in the Undo method<br><br> - Marc Girod for bug reports<br><br> - Gerd Schwartz for reporting a bug with printing headers/footers that contain long texts (MPHexEditorEx only)<br><br> - Bogdan Ureche for reporting an integer overflow when moving the cursor over a large selection<br><br> - Heybirder for reporting that delphi 6 has not TStringList.ValueFromIndex property<br><br> - Magnus Flysj&ouml; for his Delphi2006 package and the updated MPDELVER.INC file<br><br> - Patrick Kolla for OwnerData, Delphi XE, and maintaining the LaunchPad project<br><br> <h3>history:</h3> <p><ul> <li>v 07-10-20010 october 7, 2010<br><br> - the project source is now on LaunchPad as part of the Delphi Code Revival series<br> - first public release with OwnerData - source code is Delphi XE (and ths hopefully 2009) compatible<br><br></li> <li>v 09-30-2007: september 30, 2007<br><br> - different calculation of textheight and charwidth to better support e.g. chinese unicode characters<br> - When changing <CODE><A href="TCustomMPHexEditor.htm#HexLowerCase">HexLowerCase</A></CODE>, the ruler has not been drawn correctly<br><br></li> <li>v 12-06-2006: december 06, 2006<br><br> - changed SelectionChanged method, so the <CODE><A href="TCustomMPHexEditor.htm#OnSelectionChanged">OnSelectionChanged</A></CODE> event should work when the editor control is put on a TFrame component<br> - added delphi2006 package<br> - added <CODE><A href="TCustomMPHexEditor.htm#AutoBytesPerRow">AutoBytesPerRow</A></CODE> property<br> - the <CODE><A href="TCustomMPHexEditor.htm#SelCount">SelCount</A></CODE> property is writeable now<br> - standard actions support in <CODE><A href="TMPHexEditorEx.htm">TMPHexEditorEx</A></CODE><br><br></li> <li>v 05-24-2006: may 24, 2006<br><br> - fixed painting bug when drawing solid "secondary" cursor frames (if <CODE><A href="TCustomMPHexEditor.htm#FocusFrame">FocusFrame</A></CODE> = False)<br> - restored compatibility of mphexeditorex.pas with delphi 6<br><br></li> <li>v 02-06-2006: february 06, 2006<br><br> - changed key handling (VK_INSERT, no action if a control key is pressed)<br> - fixed an access violation in CursorOverSelection when moving the cursor over a large selection<br> - added conditional defines for delphi 8 and delphi 2005 in MPDELVER.INC</br> - removed FastPointer property, use the GetFastPointer function instead (it checks boundaries)<br><br></li> <li>v 05-23-2005: may 23, 2005<br><br> - fixed an access violation in the undo storage code when reallocating memory during storing of undo data<br> - the secondary focus frame on the hex pane now is painted around the whole actual data value (4 digits if unicode, 2 digits otherwise)<br> - added procedure <CODE><A href="TCustomMPHexEditor.htm#CenterCursorPosition">CenterCursorPosition</A></CODE><br> - in <CODE><A href="TCustomMPHexEditor.htm#InsertBuffer">InsertBuffer</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#Replace">Replace</A></CODE> now the position parameter is checked<br><br></li> <li>v 12-29-2004: december 29, 2004<br><br> - initialized Result to '' in some string functions/methods to avoid non empty Result vars at function startup due to compiler optimizations (particularly on d4), e.g. printing did not work correctly under d4<br> - updated some of the sample projects (fixed the broken bcb6 sample, added printing to the hex viewer and the bcb6 editor sample) <br><br></li> <li>v 12-28-2004: december 28, 2004<br><br> - changed the progress event calling part in <CODE><A href="TCustomMPHexEditor.htm#Find">Find</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#FindWithWildcard">FindWithWildcard</A></CODE> to avoid a division by zero error when working on files &lt; 500 bytes<br><br></li> <li>v 12-21-2004: december 21, 2004<br><br> - changed <CODE><A href="TCustomMPHexEditor.htm#PrepareFindReplaceData">PrepareFindReplaceData</A></CODE> to avoid an exception when the string parameter is empty<br><br></li> <li>v 11-12-2004: november 12, 2004<br><br> - changed mouse selection in insert mode, now it's more text editor-like<br> - <CODE><A href="TCustomMPHexEditor.htm#Undo">Undo</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#Redo">Redo</A></CODE> disabled when <CODE><A href="TCustomMPHexEditor.htm#ReadOnlyView">ReadOnlyView</A></CODE> is True<br> - some small other modifications<br> <br><br></li> <li>v 10-26-2004: october 26, 2004<br><br> - fixed a typecasting bug in the Undo method (integer overflow)<br> - added some utility functions for unsigned int64 arithmetics (<CODE><A href="dcrHexEditor.htm#AddU64">AddU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#TryAddU64">TryAddU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#SubtractU64">SubtractU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#TrySubtractU64">TrySubtractU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#MultiplyU64">MultiplyU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#TryMultiplyU64">TryMultiplyU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#DivideU64">DivideU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#TryDivideU64">TryDivideU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#ModuloU64">ModuloU64</A></CODE>, <CODE><A href="dcrHexEditor.htm#TryModuloU64">TryModuloU64</A></CODE>) <br><br></li> <li>v 08-29-2004: august 29, 2004<br><br> - Added <CODE><A href="TMPHColors.htm#ActiveFieldBackground">ActiveFieldBackground</A></CODE> color property<br><br></li> <li>v 08-14-2004: august 14, 2004<br><br> - the caret was not set properly when switching from hex to char pane if no data was in the editor <br> - Added <CODE><A href="TCustomMPHexEditor.htm#MaskedChars">MaskedChars</A></CODE> property<br><br></li> <li>v 06-15-2004: june 15, 2004<br><br> - Added <CODE><A href="TCustomMPHexEditor.htm#DrawDataPosition">DrawDataPosition</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#IsDrawDataSelected">IsDrawDataSelected</A></CODE> properties <br> - changes in drawing/invalidating to avoid unnecessary painting <br> - OnMouseDown is now called also if offset pane or ruler are clicked <br> - if <CODE><A href="TCustomMPHexEditor.htm#BytesPerUnit">BytesPerUnit</A></CODE> is changed, the selection is reset if (SelCount mod BytesPerUnit) &lt;&gt; 0 <br> - if <CODE><A href="TCustomMPHexEditor.htm#CaretKind">CaretKind</A></CODE> is ckAuto, the caret is a bottom line if <CODE><A href="TCustomMPHexEditor.htm#ReadOnlyView">ReadOnlyView</A></CODE> is True<br><br></li> <li>v 06-10-2004: june 10, 2004<br><br> - added <CODE><A href="TCustomMPHexEditor.htm#RulerNumberBase">RulerNumberBase</A></CODE> property <br> - overwritten CanFocus method due to vcl bug (see <a href="http://info.borland.com/devsupport/delphi/fixes/delphi4/vcl.html"> http://info.borland.com/devsupport/delphi/fixes/delphi4/vcl.html</a>, ref 279<br><br></li> <li>v 06-07-2004: june 07, 2004<br><br> - fixed a crash ("Grid index out of range") when switching from unicode <br> - <CODE><A href="TCustomMPHexEditor.htm#SyncView">SyncView</A></CODE> modified to be able to synchronize the view of editors with different data sizes/layouts, also with offset <br> - on changing TopRow/LeftCol the caret is repositionned <br> - overwritten mouse wheel handling to allow page scrolling <br> - manual handling of MaskChar property streaming due to bug reports ("Invalid Property Value")<br><br></li> <li>v 05-30-2004: may 30, 2004<br><br> - fixed broken CanOpenFile routine (files were always marked read-only)<br><br></li> <li>v 05-27-2004: may 27, 2004<br><br> - added <CODE><A href="TCustomMPHexEditor.htm#IsMaxOffset">IsMaxOffset</A></CODE> property <br> - the control gets focused when the mouse is clicked even when the mouse is over the selection<br><br></li> <li>v 05-13-2004: may 13, 2004<br><br> - <CODE><A href="TCustomMPHexEditor.htm#OnDrawCell">OnDrawCell</A></CODE> is now also called for the top left cell<br> - setting <CODE><A href="TCustomMPHexEditor.htm#UnicodeChars">UnicodeChars</A></CODE> to False now correctly sets <CODE><A href="TCustomMPHexEditor.htm#BytesPerUnit">BytesPerUnit</A></CODE> to 1 <br><br></li> <li>v 04-18-2004: april 18, 2004<br><br> - parameters aBuffer and bBuffer were interchanged in the CopyMemory call in <CODE><A href="dcrHexEditor.htm#TranslateBufferFromAnsi">TranslateBufferFromAnsi</A></CODE><br> - <CODE><A href="TCustomMPHexEditor.htm#GetOffsetString">GetOffsetString</A></CODE> can now be called in <CODE><A href="TCustomMPHexEditor.htm#OnGetOffsetText">OnGetOffsetText</A></CODE> without crashing (infinite recursion = stack overflow) <br><br></li> <li>v 01-08-2004: january 08, 2004<br><br> - added some explicit pointer typecasts for {$T+} compatibility<br> - removed FindTable and FindTableI properties under BCB (doesn't compile) <br><br></li> <li>v 12-16-2003: december 16, 2003<br><br> - Setting the <CODE><A href="TCustomMPHexEditor.htm#DataSize">DataSize</A></CODE> property is now undoable<br> - Added the public <CODE><A href="TCustomMPHexEditor.htm#SetDataSizeFillByte">SetDataSizeFillByte</A></CODE> property to be able to control what byte is used to enlarge the data<br> - Now checking <CODE><A href="TCustomMPHexEditor.htm#NoSizeChange">NoSizeChange</A></CODE> before allowing to set <CODE><A href="TCustomMPHexEditor.htm#DataSize">DataSize</A></CODE><br> - CreateUndo is no longer a function, but a procedure. Now an exception is raised when no undo record can be created <br><br></li> <li>v 12-10-2003: december 10, 2003<br><br> - Renamed OnLoadSaveProgress to <CODE><A href="TCustomMPHexEditor.htm#OnProgress">OnProgress</A></CODE><br> - Added property <CODE><A href="TCustomMPHexEditor.htm#FindProgress">FindProgress</A></CODE><br> - Added custom find methods (<CODE><A href="TCustomMPHexEditor.htm#OnFind">OnFind</A></CODE>, <CODE><A href="TCustomMPHexEditor.htm#OnWildcardFind">OnWildcardFind</A></CODE><br> - <CODE><A href="TCustomMPHexEditor.htm#Find">Find</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#FindWithWildcard">FindWithWildcard</A></CODE> speeded up by using precompiled character tables<br> - <CODE><A href="TCustomMPHexEditor.htm#Find">Find</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#FindWithWildcard">FindWithWildcard</A></CODE> now also fire the <CODE><A href="TCustomMPHexEditor.htm#OnProgress">OnProgress</A></CODE> event if <CODE><A href="TCustomMPHexEditor.htm#FindProgress">FindProgress</A></CODE> is set to true<br> - fixed a bug in mouse handling (weird selection or line offsets when doublecklicking ruler bar/offset panel) <br> - modified selectioncode to better support double byte selection (unicode) <br><br></li> <li>v 09-24-2003: september 24, 2003<br><br> - modified the BCB6 package<br><br></li> <li>v 09-09-2003: september 09, 2003<br><br> - changed some constants, classes and types from MPTH... to MPH...<br> - changed MPHCustTransFieldFrom/To to <CODE><A href="dcrHexEditor.htm#MPHCustomCharConv">MPHCustomCharConv</A></CODE><br> - <CODE><A href="TCustomMPHexEditor.htm#BytesPerBlock">BytesPerBlock</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#SeparateBlocksInCharField">SeparateBlocksInCharField</A></CODE> properties added<br> - <CODE><A href="TCustomMPHexEditor.htm#DataSize">DataSize</A></CODE> property is writeable now<br> - Page down key now also reaches the last row<br> - added <CODE><A href="TCustomMPHexEditor.htm#OnGetOffsetText">OnGetOffsetText</A></CODE> property<br> - added <CODE><A href="TCustomMPHexEditor.htm#AddSelectionUndo">AddSelectionUndo</A></CODE> procedure<br> - added defines for delphi7, renamed delver.inc to mpdelver.inc<br> - added wildcard search (<CODE><A href="TCustomMPHexEditor.htm#FindWithWildcard">FindWithWildcard</A></CODE>)<br> - added <CODE><A href="TCustomMPHexEditor.htm#SeekToEOF">SeekToEOF</A></CODE><br> - changed keyboard handling, so OnKeyDown should work better<br> - added <CODE><A href="TCustomMPHexEditor.htm#GotoBookmark">GotoBookmark</A></CODE> method to set cursor to a bookmarked position<br> - added <CODE><A href="TCustomMPHexEditor.htm#OnBookmarkChanged">OnBookmarkChanged</A></CODE> property<br> - support for unsigned int64 radix conversions<br> - <CODE><A href="TCustomMPHexEditor.htm#Replace">Replace</A></CODE> method added<br><br></li> <li>v 07-05-2003: july 05, 2003<br><br> - better handling of odd sized files when BytesPerUnit &lt;&gt; 1<br> - added support for pasting clipboard data in fixed filesize mode in <CODE><A href="TMPHexEditorEx.htm">TMPHexEditorEx</A></CODE><br> - added RegEdit_HexData clipboard support in <CODE><A href="TMPHexEditorEx.htm">TMPHexEditorEx</A></CODE><br><br></li> <li>v 05-25-2003-b: may 25, 2003<br><br> - fixed a bug (moving the cursor beyond eof)<br><br></li> <li>v 05-25-2003: may 25, 2003<br><br> - added some kind of ownerdraw (see <CODE><A href="TCustomMPHexEditor.htm#OnDrawCell">OnDrawCell</A></CODE>)<br><br></li> <li>v 05-20-2003: may 20, 2003<br><br> - renamed, added and changed some methods, classes and properties<br> - fixed some bugs in the ruler display (e.g. when BytesPerRow is changed)<br> - fixed some bugs when BytesPerUnit &lt;&gt; 1<br> - added some unicode support (<CODE><A href="TCustomMPHexEditor.htm#UnicodeChars">UnicodeChars</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#UnicodeBigEndian">UnicodeBigEndian</A></CODE>)<br> - fixed some half byte (nibble) related bugs<br><br></li> <li>v 05-17-2003: may 17, 2003<br><br> - added <CODE><A href="TCustomMPHexEditor.htm#DisplayStart">DisplayStart</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#DisplayEnd">DisplayEnd</A></CODE> functions to retrieve the data bounds currently displayed<br> - added <CODE><A href="TCustomMPHexEditor.htm#BytesPerUnit">BytesPerUnit</A></CODE> and <CODE><A href="TCustomMPHexEditor.htm#RulerBytesPerUnit">RulerBytesPerUnit</A></CODE> properties to treat words/dwords/qwords as a unit<br> - added <CODE><A href="TCustomMPHexEditor.htm#SyncView">SyncView</A></CODE> procedure and <CODE><A href="TCustomMPHexEditor.htm#OnSelectionChanged">OnSelectionChanged</A></CODE> property to synchronize position and selection with another editor<br> - added <CODE><A href="TCustomMPHexEditor.htm#ShowPositionIfNotFocused">ShowPositionIfNotFocused</A></CODE> property to show the current position if the editor is not focused<br><br></li> <li>v 10-25-2002: october 25, 2002<br><br> - corrected the BytesPerColumn default value<br><br></li> <li>v 08-18-2002: august 18, 2002<br><br> - modified painting and selection<br> - implemented an additional ruler bar at the top<br> - new properties: <CODE><A href="TCustomMPHexEditor.htm#ShowRuler">ShowRuler</A></CODE>, <CODE><A href="TCustomMPHexEditor.htm#DrawGutter3D">DrawGutter3D</A></CODE><br><br></li> <li>v 08-12-2002: august 12, 2002<br><br> - modified Changed calls to get correct Modified property in OnChange handler<br><br></li> <li>v 08-09-2002: august 09, 2002<br><br> - included missing include file delver.inc<br> - added OnChange event<br><br></li> <li>v 07-21-2002: july 21, 2002<br><br> too many changes to mention here (completely rewritten, basic and advanced versions TMPHexEditor and TMPHexEditorEx), plz read the documentation included with this package for more information</li> </ul></p><H2>Classes, Interfaces and Objects</H2>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#e0e0e0"><TH>Name</TH><TH>Description</TH></TR>
<TR bgcolor=#efefef valign=top><TD>Class&nbsp;<A href="EMPHexEditor.htm"><CODE>EMPHexEditor</CODE></A></TD><TD width=100%>&nbsp;</TD></TR><TR bgcolor=#efefef valign=top><TD>Class&nbsp;<A href="TCustomMPHexEditor.htm"><CODE>TCustomMPHexEditor</CODE></A></TD><TD>&nbsp;</TD></TR><TR bgcolor=#efefef valign=top><TD>Class&nbsp;<A href="TMPHColors.htm"><CODE>TMPHColors</CODE></A></TD><TD>&nbsp;</TD></TR><TR bgcolor=#efefef valign=top><TD>Class&nbsp;<A href="TMPHexEditor.htm"><CODE>TMPHexEditor</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><H2>Functions and Procedures</H2>
<H3>Overview</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><CODE>function <A href="#AddU64"><B>AddU64</B></A>(const Addend1, Addend2: int64): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#CheckRadixToInt"><B>CheckRadixToInt</B></A>(Value: string): integer;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#CheckRadixToInt64"><B>CheckRadixToInt64</B></A>(Value: string): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#ConvertBinToHex"><B>ConvertBinToHex</B></A>(aFrom, aTo: PAnsiChar; const ACount: integer; const SwapNibbles: boolean): PAnsiChar;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#ConvertHexToBin"><B>ConvertHexToBin</B></A>(aFrom, aTo: PAnsiChar; const ACount: integer; const SwapNibbles: boolean; var BytesTranslated: integer): PAnsiChar;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#DivideU64"><B>DivideU64</B></A>(const Dividend, Divisor: int64): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#GetTempName"><B>GetTempName</B></A>: string;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#GridCoord"><B>GridCoord</B></A>(aX, aY: Longint): TGridCoord;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IntToOctal"><B>IntToOctal</B></A>(const Value: integer): AnsiString;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IntToRadix"><B>IntToRadix</B></A>(Value: integer; Radix: byte): AnsiString;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IntToRadix64"><B>IntToRadix64</B></A>(Value: int64; Radix: byte): AnsiString;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IntToRadixLen"><B>IntToRadixLen</B></A>(Value: integer; Radix, Len: byte): AnsiString;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IntToRadixLen64"><B>IntToRadixLen64</B></A>(Value: int64; Radix, Len: byte): AnsiString;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#IsKeyDown"><B>IsKeyDown</B></A>(aKey: integer): boolean;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#Max"><B>Max</B></A>(a1, a2: integer): integer;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#Min"><B>Min</B></A>(a1, a2: integer): integer;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#ModuloU64"><B>ModuloU64</B></A>(const Dividend, Divisor: int64): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#MultiplyU64"><B>MultiplyU64</B></A>(const Multiplier, Multiplicator: int64): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#OctalToInt"><B>OctalToInt</B></A>(const Value: string): integer;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#RadixToInt"><B>RadixToInt</B></A>(Value: string; Radix: byte): integer;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#RadixToInt64"><B>RadixToInt64</B></A>(Value: string; Radix: byte): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>procedure <A href="#RaiseLastOSError"><B>RaiseLastOSError</B></A>;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#SubtractU64"><B>SubtractU64</B></A>(const Minuend, Subtrahend: int64): int64;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>procedure <A href="#SwapWideChar"><B>SwapWideChar</B></A>(var WChar: WideChar);</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>procedure <A href="#TranslateBufferFromAnsi"><B>TranslateBufferFromAnsi</B></A>(const TType: <A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>; aBuffer: PChar; bBuffer: PAnsiChar; const ACount: integer);</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>procedure <A href="#TranslateBufferToAnsi"><B>TranslateBufferToAnsi</B></A>(const TType: <A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>; aBuffer: PAnsiChar; bBuffer: PChar; const ACount: integer);</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#TryAddU64"><B>TryAddU64</B></A>(const Addend1, Addend2: int64; var Val: int64): boolean;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#TryDivideU64"><B>TryDivideU64</B></A>(const Dividend, Divisor: int64; var Val: int64): boolean;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#TryModuloU64"><B>TryModuloU64</B></A>(const Dividend, Divisor: int64; var Val: int64): boolean;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#TryMultiplyU64"><B>TryMultiplyU64</B></A>(const Multiplier, Multiplicator: int64; var Val: int64): boolean;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE>function <A href="#TrySubtractU64"><B>TrySubtractU64</B></A>(const Minuend, Subtrahend: int64; var Val: int64): boolean;</CODE></TD></TR></TABLE><H3>Description</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="AddU64"><CODE>function <B>AddU64</B>(const Addend1, Addend2: int64): int64;</CODE></A></TD></TR></TABLE><P>addition of two unsigned int64 values, may raise an exception on error</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="CheckRadixToInt"><CODE>function <B>CheckRadixToInt</B>(Value: string): integer;</CODE></A></TD></TR></TABLE><P>try to find the correct radix (based on prefix/suffix) and return the number, known prefixes/suffixes are:<br> 0x&lt;number&gt;, 0X&lt;number&gt;, $&lt;number&gt;, &lt;number&gt;h, &lt;number&gt;H: radix 16<br> o&lt;number&gt;, O&lt;number&gt;, 0&lt;number&gt;, &lt;number&gt;o, &lt;number&gt;O: radix 8<br> %&lt;number&gt;, &lt;number&gt;%: radix 2<br> otherwise: radix 10</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="CheckRadixToInt64"><CODE>function <B>CheckRadixToInt64</B>(Value: string): int64;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="ConvertBinToHex"><CODE>function <B>ConvertBinToHex</B>(aFrom, aTo: PAnsiChar; const ACount: integer; const SwapNibbles: boolean): PAnsiChar;</CODE></A></TD></TR></TABLE><P>translate binary data to its hex representation (see <CODE><A href="dcrHexEditor.htm#ConvertHexToBin">ConvertHexToBin</A></CODE>), (see <CODE><A href="TCustomMPHexEditor.htm#SwapNibbles">SwapNibbles</A></CODE> for the meaning of the SwapNibbles value)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="ConvertHexToBin"><CODE>function <B>ConvertHexToBin</B>(aFrom, aTo: PAnsiChar; const ACount: integer; const SwapNibbles: boolean; var BytesTranslated: integer): PAnsiChar;</CODE></A></TD></TR></TABLE><P>translate a hexadecimal data representation ("a000 cc45 d3 42"...) to binary data (see <CODE><A href="TCustomMPHexEditor.htm#SwapNibbles">SwapNibbles</A></CODE> for the meaning of the SwapNibbles value)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="DivideU64"><CODE>function <B>DivideU64</B>(const Dividend, Divisor: int64): int64;</CODE></A></TD></TR></TABLE><P>division of two unsigned int64 values, may raise an exception on error</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="GetTempName"><CODE>function <B>GetTempName</B>: string;</CODE></A></TD></TR></TABLE><P>get a unique filename in the temporary directory</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="GridCoord"><CODE>function <B>GridCoord</B>(aX, aY: Longint): TGridCoord;</CODE></A></TD></TR></TABLE><P>convert X and Y into a TGridCoord record</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IntToOctal"><CODE>function <B>IntToOctal</B>(const Value: integer): AnsiString;</CODE></A></TD></TR></TABLE><P>translate an integer to an octal string (see also <CODE><A href="dcrHexEditor.htm#IntToRadix">IntToRadix</A></CODE>)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IntToRadix"><CODE>function <B>IntToRadix</B>(Value: integer; Radix: byte): AnsiString;</CODE></A></TD></TR></TABLE><P>translate an integer to a radix (base) coded string, e.g.<br> - IntToRadix(100,16) converts into a hexadecimal (number) string<br> - IntToRadix(100,2) converts into a string consisting only of 0 and 1<br> - IntToRadix(100,8) means IntToOctal<br> <br> hint: Radix must be in the range of 2..16</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IntToRadix64"><CODE>function <B>IntToRadix64</B>(Value: int64; Radix: byte): AnsiString;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IntToRadixLen"><CODE>function <B>IntToRadixLen</B>(Value: integer; Radix, Len: byte): AnsiString;</CODE></A></TD></TR></TABLE><P>translate an integer to a radix coded string and left fill with 0 (see also <CODE><A href="dcrHexEditor.htm#IntToRadix">IntToRadix</A></CODE>)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IntToRadixLen64"><CODE>function <B>IntToRadixLen64</B>(Value: int64; Radix, Len: byte): AnsiString;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="IsKeyDown"><CODE>function <B>IsKeyDown</B>(aKey: integer): boolean;</CODE></A></TD></TR></TABLE><P>check whether the given key (VK_...) is currently down</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="Max"><CODE>function <B>Max</B>(a1, a2: integer): integer;</CODE></A></TD></TR></TABLE><P>returns the higer of the two numbers</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="Min"><CODE>function <B>Min</B>(a1, a2: integer): integer;</CODE></A></TD></TR></TABLE><P>returns the lower of the two numbers</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="ModuloU64"><CODE>function <B>ModuloU64</B>(const Dividend, Divisor: int64): int64;</CODE></A></TD></TR></TABLE><P>modulo of two unsigned int64 values, may raise an exception on error</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MultiplyU64"><CODE>function <B>MultiplyU64</B>(const Multiplier, Multiplicator: int64): int64;</CODE></A></TD></TR></TABLE><P>multiplication of two unsigned int64 values, may raise an exception on error</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="OctalToInt"><CODE>function <B>OctalToInt</B>(const Value: string): integer;</CODE></A></TD></TR></TABLE><P>translate an number string built on radix 8 into an integer (see also <CODE><A href="dcrHexEditor.htm#RadixToInt">RadixToInt</A></CODE>)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="RadixToInt"><CODE>function <B>RadixToInt</B>(Value: string; Radix: byte): integer;</CODE></A></TD></TR></TABLE><P>translate a radix coded number string into an integer, e.g.<br> - RadixToInt('0f', 16) => 15<br> - RadixToInt('755', 8) => 493</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="RadixToInt64"><CODE>function <B>RadixToInt64</B>(Value: string; Radix: byte): int64;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="RaiseLastOSError"><CODE>procedure <B>RaiseLastOSError</B>;</CODE></A></TD></TR></TABLE><P>compatibility</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="SubtractU64"><CODE>function <B>SubtractU64</B>(const Minuend, Subtrahend: int64): int64;</CODE></A></TD></TR></TABLE><P>subtraction of two unsigned int64 values, may raise an exception on error</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="SwapWideChar"><CODE>procedure <B>SwapWideChar</B>(var WChar: WideChar);</CODE></A></TD></TR></TABLE><P>swap lo and high byte of a widechar</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TranslateBufferFromAnsi"><CODE>procedure <B>TranslateBufferFromAnsi</B>(const TType: <A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>; aBuffer: PChar; bBuffer: PAnsiChar; const ACount: integer);</CODE></A></TD></TR></TABLE><P>translate data from Ansi to a different character set (see also <CODE><A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A></CODE>)<br> - TType: translate to this character set<br> - aBuffer: pointer to source data<br> - bBuffer: pointer to target data, must be allocated (may equal to aBuffer)<br> - aCount: number of bytes to translate</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TranslateBufferToAnsi"><CODE>procedure <B>TranslateBufferToAnsi</B>(const TType: <A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>; aBuffer: PAnsiChar; bBuffer: PChar; const ACount: integer);</CODE></A></TD></TR></TABLE><P>translate data from a different character set to Ansi (see also <CODE><A href="dcrHexEditor.htm#TranslateBufferFromAnsi">TranslateBufferFromAnsi</A></CODE>)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TryAddU64"><CODE>function <B>TryAddU64</B>(const Addend1, Addend2: int64; var Val: int64): boolean;</CODE></A></TD></TR></TABLE><P>addition of two unsigned int64 values, returns false if an error occurred</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TryDivideU64"><CODE>function <B>TryDivideU64</B>(const Dividend, Divisor: int64; var Val: int64): boolean;</CODE></A></TD></TR></TABLE><P>division of two unsigned int64 values, returns false if an error occurred</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TryModuloU64"><CODE>function <B>TryModuloU64</B>(const Dividend, Divisor: int64; var Val: int64): boolean;</CODE></A></TD></TR></TABLE><P>modulo of two unsigned int64 values, returns false if an error occurred</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TryMultiplyU64"><CODE>function <B>TryMultiplyU64</B>(const Multiplier, Multiplicator: int64; var Val: int64): boolean;</CODE></A></TD></TR></TABLE><P>multiplication of two unsigned int64 values, returns false if an error occurred</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TrySubtractU64"><CODE>function <B>TrySubtractU64</B>(const Minuend, Subtrahend: int64; var Val: int64): boolean;</CODE></A></TD></TR></TABLE><P>subtraction of two unsigned int64 values, returns false if an error occurred</P><H2>Types</H2>
<H3>Overview</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><CODE><A href="#PMPHFindTable"><B>PMPHFindTable</B></A> = ^<A href="dcrHexEditor.htm#TMPHFindTable">TMPHFindTable</A>;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TColorHighlightArea"><B>TColorHighlightArea</B></A> = record StartOffset, EndOffset: cardinal; UseForegroundColor, UseBackgroundColor: boolean; ForegroundColor, BackgroundColor: TColor; FieldName: string; FieldType: <A href="dcrHexEditor.htm#TMPHHightlightFieldType">TMPHHightlightFieldType</A>; end;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHBookmark"><B>TMPHBookmark</B></A> = record mPosition: integer; mInCharField: boolean; end;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHBookmarks"><B>TMPHBookmarks</B></A> = array [0 .. 9] of <A href="dcrHexEditor.htm#TMPHBookmark">TMPHBookmark</A>;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHCharConv"><B>TMPHCharConv</B></A> = array [<A href="dcrHexEditor.htm#TMPHCharConvType">TMPHCharConvType</A>] of <A href="dcrHexEditor.htm#TMPHCharConvTable">TMPHCharConvTable</A>;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHCharConvTable"><B>TMPHCharConvTable</B></A> = array [0 .. 255] of AnsiChar;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHDrawCellEvent"><B>TMPHDrawCellEvent</B></A> = procedure(Sender: TObject; ACanvas: TCanvas; ACol, ARow: integer; var AWideText: WideString; ARect: TRect; var ADefaultDraw: boolean) of object;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHFindEvent"><B>TMPHFindEvent</B></A> = procedure(Sender: TObject; const Pattern: PAnsiChar; const PatLength: integer; const SearchFrom, SearchUntil: integer; const IgnoreCase: boolean; const Wildcard: AnsiChar; var FoundPos: integer) of object;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHFindTable"><B>TMPHFindTable</B></A> = array [#0 .. #255] of AnsiChar;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHGetData"><B>TMPHGetData</B></A> = procedure(Sender: TObject; const Offset: int64; var Data: byte) of object;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHGetOffsetTextEvent"><B>TMPHGetOffsetTextEvent</B></A> = procedure(Sender: TObject; const Number: int64; var OffsetText: AnsiString) of object;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHOffsetFormat"><B>TMPHOffsetFormat</B></A> = record Format: string; Prefix, Suffix: AnsiString; MinWidth: integer; Flags: <A href="dcrHexEditor.htm#TMPHOffsetFormatFlags">TMPHOffsetFormatFlags</A>; Radix, _BytesPerUnit: byte; end;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHOffsetFormatFlags"><B>TMPHOffsetFormatFlags</B></A> = set of <A href="dcrHexEditor.htm#TMPHOffsetFormatFlag">TMPHOffsetFormatFlag</A>;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHProgressEvent"><B>TMPHProgressEvent</B></A> = procedure(Sender: TObject; const ProgressType: <A href="dcrHexEditor.htm#TMPHProgressKind">TMPHProgressKind</A>; const aName: TFileName; const Percent: byte; var Cancel: boolean) of object;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#TMPHUndoFlags"><B>TMPHUndoFlags</B></A> = set of <A href="dcrHexEditor.htm#TMPHUndoFlag">TMPHUndoFlag</A>;</CODE></TD></TR></TABLE><H3>Description</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="PMPHFindTable"><CODE><B>PMPHFindTable</B> = ^<A href="dcrHexEditor.htm#TMPHFindTable">TMPHFindTable</A>;</CODE></A></TD></TR></TABLE><P>precompiled converted character table types for faster data search</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TColorHighlightArea"><CODE><B>TColorHighlightArea</B> = record StartOffset, EndOffset: cardinal; UseForegroundColor, UseBackgroundColor: boolean; ForegroundColor, BackgroundColor: TColor; FieldName: string; FieldType: <A href="dcrHexEditor.htm#TMPHHightlightFieldType">TMPHHightlightFieldType</A>; end;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHBookmark"><CODE><B>TMPHBookmark</B> = record mPosition: integer; mInCharField: boolean; end;</CODE></A></TD></TR></TABLE><P>bookmark record:<br> defined by pressing SHIFT+CTRL+[0..9], goto bookmark by pressing CTRL+[0..9]<br><br> - mPosition: file position<br> - mInCharField: cursor in character pane (True) or hex number pane</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHBookmarks"><CODE><B>TMPHBookmarks</B> = array [0 .. 9] of <A href="dcrHexEditor.htm#TMPHBookmark">TMPHBookmark</A>;</CODE></A></TD></TR></TABLE><P>array of bookmarks, representing keys 0..9</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHCharConv"><CODE><B>TMPHCharConv</B> = array [<A href="dcrHexEditor.htm#TMPHCharConvType">TMPHCharConvType</A>] of <A href="dcrHexEditor.htm#TMPHCharConvTable">TMPHCharConvTable</A>;</CODE></A></TD></TR></TABLE><P>character conversion data storage</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHCharConvTable"><CODE><B>TMPHCharConvTable</B> = array [0 .. 255] of AnsiChar;</CODE></A></TD></TR></TABLE><P>character conversion table</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHDrawCellEvent"><CODE><B>TMPHDrawCellEvent</B> = procedure(Sender: TObject; ACanvas: TCanvas; ACol, ARow: integer; var AWideText: WideString; ARect: TRect; var ADefaultDraw: boolean) of object;</CODE></A></TD></TR></TABLE><P>owner draw event type. parameters:<br><br> - Sender: the hex editor<br> - ACanvas: the editor's canvas<br> - ACol, ARow: the position to be drawn<br> - AWideText: the text to be drawn<br> - ARect: the cell rectangle<br> - ADefaultDraw: if set to True (default), default drawing isperformed after the event handler returns. if set to false, the event handler must do all cell painting.</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHFindEvent"><CODE><B>TMPHFindEvent</B> = procedure(Sender: TObject; const Pattern: PAnsiChar; const PatLength: integer; const SearchFrom, SearchUntil: integer; const IgnoreCase: boolean; const Wildcard: AnsiChar; var FoundPos: integer) of object;</CODE></A></TD></TR></TABLE><P>handler for custom search routines<br><br> - Pattern: the data to find - PatLength: length of the data to find - SearchFrom: first search position - SearchUntil: last search position - IgnoreCase: case sensitive? - Wilcard: Wildcard character (only used by FindWithWildcard) - FoundPos: result, set to -1 if data was not found</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHFindTable"><CODE><B>TMPHFindTable</B> = array [#0 .. #255] of AnsiChar;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHGetData"><CODE><B>TMPHGetData</B> = procedure(Sender: TObject; const Offset: int64; var Data: byte) of object;</CODE></A></TD></TR></TABLE><P>retrieve the "line number" to display by the application<br><br> - Number: the number to convert to text - OffsetText: the resulting text output</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHGetOffsetTextEvent"><CODE><B>TMPHGetOffsetTextEvent</B> = procedure(Sender: TObject; const Number: int64; var OffsetText: AnsiString) of object;</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHOffsetFormat"><CODE><B>TMPHOffsetFormat</B> = record Format: string; Prefix, Suffix: AnsiString; MinWidth: integer; Flags: <A href="dcrHexEditor.htm#TMPHOffsetFormatFlags">TMPHOffsetFormatFlags</A>; Radix, _BytesPerUnit: byte; end;</CODE></A></TD></TR></TABLE><P>offset format record</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHOffsetFormatFlags"><CODE><B>TMPHOffsetFormatFlags</B> = set of <A href="dcrHexEditor.htm#TMPHOffsetFormatFlag">TMPHOffsetFormatFlag</A>;</CODE></A></TD></TR></TABLE><P>set of the above flags</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHProgressEvent"><CODE><B>TMPHProgressEvent</B> = procedure(Sender: TObject; const ProgressType: <A href="dcrHexEditor.htm#TMPHProgressKind">TMPHProgressKind</A>; const aName: TFileName; const Percent: byte; var Cancel: boolean) of object;</CODE></A></TD></TR></TABLE><P>progress event handler, used in <CODE><A href="TCustomMPHexEditor.htm#OnProgress">OnProgress</A></CODE><br><br> - ProgressType: am i loading or saving? (see <CODE><A href="dcrHexEditor.htm#TMPHProgressKind">TMPHProgressKind</A></CODE>)<br> - aName: name of file to be load from/saved to<br> - Percent: current progress (0..100)<br> - Cancel: if set to true, the load/save procedure will abort (no meaning in Find* methods) <br></P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="TMPHUndoFlags"><CODE><B>TMPHUndoFlags</B> = set of <A href="dcrHexEditor.htm#TMPHUndoFlag">TMPHUndoFlag</A>;</CODE></A></TD></TR></TABLE><P>set of undo flags</P><H2>Enumerations</H2>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHCaretKind"><CODE><B>TMPHCaretKind</B></CODE></A></TD></TR><TR><TD colspan="3">look of the editor's caret:<br> - ckFull: full block<br> - ckLeft: left line<br> - ckBottom: bottom line<br> - ckAuto: left line if <CODE><A href="TCustomMPHexEditor.htm#InsertMode">InsertMode</A></CODE>, full block if overwrite, bottom line if ReadOnlyView</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ckFull"><CODE>ckFull</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ckLeft"><CODE>ckLeft</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ckBottom"><CODE>ckBottom</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ckAuto"><CODE>ckAuto</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHCharConvType"><CODE><B>TMPHCharConvType</B></CODE></A></TD></TR><TR><TD colspan="3">character conversion type</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="cctFromAnsi"><CODE>cctFromAnsi</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="cctToAnsi"><CODE>cctToAnsi</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHHightlightFieldType"><CODE><B>TMPHHightlightFieldType</B></CODE></A></TD></TR><TR><TD colspan="3">quick and dirty workaround</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftUnknown"><CODE>hftUnknown</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftCountBytesIncl"><CODE>hftCountBytesIncl</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftCountCharsIncl"><CODE>hftCountCharsIncl</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftCountBytesExcl"><CODE>hftCountBytesExcl</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftCountCharsExcl"><CODE>hftCountCharsExcl</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftAnsiText"><CODE>hftAnsiText</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="hftWideText"><CODE>hftWideText</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHOffsetFormatFlag"><CODE><B>TMPHOffsetFormatFlag</B></CODE></A></TD></TR><TR><TD colspan="3">offset format flags</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="offCalcWidth"><CODE>offCalcWidth</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="offCalcRow"><CODE>offCalcRow</CODE></A></TD><TD>calculate minwidth depending on data size (width field = '-')</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="offCalcColumn"><CODE>offCalcColumn</CODE></A></TD><TD>calculate _BytesPerUnit depending on bytes per row (=real line numbers)</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="offBytesPerUnit"><CODE>offBytesPerUnit</CODE></A></TD><TD>" bytes per column (= column numbers)</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHProgressKind"><CODE><B>TMPHProgressKind</B></CODE></A></TD></TR><TR><TD colspan="3">action indicator used in <CODE><A href="TCustomMPHexEditor.htm#OnProgress">OnProgress</A></CODE> event handler:<br> - pkLoad: loading data<br> - pkSave: saving data<br> - pkFind: finding</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="pkLoad"><CODE>pkLoad</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="pkSave"><CODE>pkSave</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="pkFind"><CODE>pkFind</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHTranslationKind"><CODE><B>TMPHTranslationKind</B></CODE></A></TD></TR><TR><TD colspan="3">how to show a file's content in the character pane of the editor:<br> - tkAsIs: leave as is (current windows code page)<br> - tkDos8: current dos codepage<br> - tkASCII: 7 bit ascii<br> - tkMac: macintosh charset (translation always from/to ms cp 1252 (ms latin1)!!<br> - tkBCD: ibm ebcdic codepage 38 (translation always from/to ms cp 1252 (ms latin1)!!<br> - tkCustom: custom codepage stored in <CODE><A href="dcrHexEditor.htm#MPHCustomCharConv">MPHCustomCharConv</A></CODE></TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkAsIs"><CODE>tkAsIs</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkDos8"><CODE>tkDos8</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkASCII"><CODE>tkASCII</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkMac"><CODE>tkMac</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkBCD"><CODE>tkBCD</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="tkCustom"><CODE>tkCustom</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor="#efefef" ><TD colspan="3"><A name="TMPHUndoFlag"><CODE><B>TMPHUndoFlag</B></CODE></A></TD></TR><TR><TD colspan="3">flags internally used in the undo storage</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindBytesChanged"><CODE>ufKindBytesChanged</CODE></A></TD><TD>kind of undo storage</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindByteRemoved"><CODE>ufKindByteRemoved</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindInsertBuffer"><CODE>ufKindInsertBuffer</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindReplace"><CODE>ufKindReplace</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindAppendBuffer"><CODE>ufKindAppendBuffer</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindNibbleInsert"><CODE>ufKindNibbleInsert</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindNibbleDelete"><CODE>ufKindNibbleDelete</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindConvert"><CODE>ufKindConvert</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindSelection"><CODE>ufKindSelection</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindCombined"><CODE>ufKindCombined</CODE></A></TD><TD>store a selection</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufKindAllData"><CODE>ufKindAllData</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagByte1Changed"><CODE>ufFlagByte1Changed</CODE></A></TD><TD>additional information</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagByte2Changed"><CODE>ufFlagByte2Changed</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagModified"><CODE>ufFlagModified</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlag2ndByteCol"><CODE>ufFlag2ndByteCol</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagInCharField"><CODE>ufFlagInCharField</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagHasSelection"><CODE>ufFlagHasSelection</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagInsertMode"><CODE>ufFlagInsertMode</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagIsUnicode"><CODE>ufFlagIsUnicode</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagIsUnicodeBigEndian"><CODE>ufFlagIsUnicodeBigEndian</CODE></A></TD><TD>&nbsp;</TD></TR><TR valign=top><TD>&nbsp;</TD><TD><A name="ufFlagHasDescription"><CODE>ufFlagHasDescription</CODE></A></TD><TD>&nbsp;</TD></TR></TABLE><H2>Constants</H2>
<H3>Overview</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><CODE><A href="#CM_INTUPDATECARET"><B>CM_INTUPDATECARET</B></A>  = CM_BASE + $100;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#CM_SELECTIONCHANGED"><B>CM_SELECTIONCHANGED</B></A>  = CM_BASE + $101;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#ColorHighlightAreaFieldType"><B>ColorHighlightAreaFieldType</B></A> : array [<A href="dcrHexEditor.htm#TMPHHightlightFieldType">TMPHHightlightFieldType</A>] of string  = ('?', '#BytesI', '#BytesE', '#Charsi', '#CharsE', 'AnsiText', 'UTF-16');</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPHOffsetDec"><B>MPHOffsetDec</B></A>  = 'a:|';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPHOffsetHex"><B>MPHOffsetHex</B></A>  = '-!10:0x|';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPHOffsetOct"><B>MPHOffsetOct</B></A>  = '0!8:o|';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPHTranslationDesc"><B>MPHTranslationDesc</B></A> : array [<A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>] of string  = (<A href="dcrHexEditor.htm#MPH_TK_ASIS">MPH_TK_ASIS</A>, <A href="dcrHexEditor.htm#MPH_TK_DOS8">MPH_TK_DOS8</A>, <A href="dcrHexEditor.htm#MPH_TK_ASCII7">MPH_TK_ASCII7</A>, <A href="dcrHexEditor.htm#MPH_TK_MAC">MPH_TK_MAC</A>, <A href="dcrHexEditor.htm#MPH_TK_BCD38">MPH_TK_BCD38</A>, <A href="dcrHexEditor.htm#MPH_TK_CUSTOM">MPH_TK_CUSTOM</A>);</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPHTranslationDescShort"><B>MPHTranslationDescShort</B></A> : array [<A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>] of string  = (<A href="dcrHexEditor.htm#MPH_TK_ASIS_S">MPH_TK_ASIS_S</A>, <A href="dcrHexEditor.htm#MPH_TK_DOS8_S">MPH_TK_DOS8_S</A>, <A href="dcrHexEditor.htm#MPH_TK_ASCII7_S">MPH_TK_ASCII7_S</A>, <A href="dcrHexEditor.htm#MPH_TK_MAC_S">MPH_TK_MAC_S</A>, <A href="dcrHexEditor.htm#MPH_TK_BCD38_S">MPH_TK_BCD38_S</A>, <A href="dcrHexEditor.htm#MPH_TK_CUSTOM_S">MPH_TK_CUSTOM_S</A>);</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_CCONV_BCD38"><B>MPH_CCONV_BCD38</B></A> : <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConvbgcolor=#efefef valign=top><TD><CODE><A href="#MPH_CCONV_MAC"><B>MPH_CCONV_MAC</B></A> : <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConvbgcolor=#efefef valign=top><TD><CODE><A href="#MPH_FILEIO_BLOCKSIZE"><B>MPH_FILEIO_BLOCKSIZE</B></A>  = $F000;</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_ASCII7"><B>MPH_TK_ASCII7</B></A>  = 'ASCII 7 bits';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_ASCII7_S"><B>MPH_TK_ASCII7_S</B></A>  = 'ASC';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_ASIS"><B>MPH_TK_ASIS</B></A>  = 'Windows';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_ASIS_S"><B>MPH_TK_ASIS_S</B></A>  = 'WIN';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_BCD38"><B>MPH_TK_BCD38</B></A>  = 'EBCDIC codepage 38';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_BCD38_S"><B>MPH_TK_BCD38_S</B></A>  = 'BCD';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_CUSTOM"><B>MPH_TK_CUSTOM</B></A>  = 'Custom translation';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_CUSTOM_S"><B>MPH_TK_CUSTOM_S</B></A>  = 'Cust';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_DOS8"><B>MPH_TK_DOS8</B></A>  = 'Dos 8 bits';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_DOS8_S"><B>MPH_TK_DOS8_S</B></A>  = 'DOS';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_MAC"><B>MPH_TK_MAC</B></A>  = 'Macintosh';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_TK_MAC_S"><B>MPH_TK_MAC_S</B></A>  = 'MAC';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_UC"><B>MPH_UC</B></A>  = 'Unicode little endian';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_UC_BE"><B>MPH_UC_BE</B></A>  = 'Unicode big endian';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_UC_BE_S"><B>MPH_UC_BE_S</B></A>  = 'UCBE';</CODE></TD></TR><TR bgcolor=#efefef valign=top><TD><CODE><A href="#MPH_UC_S"><B>MPH_UC_S</B></A>  = 'UCLE';</CODE></TD></TR></TABLE><H3>Description</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="CM_INTUPDATECARET"><CODE><B>CM_INTUPDATECARET</B>  = CM_BASE + $100;</CODE></A></TD></TR></TABLE><P>this message is posted to the hex editor when it should update the caret position</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="CM_SELECTIONCHANGED"><CODE><B>CM_SELECTIONCHANGED</B>  = CM_BASE + $101;</CODE></A></TD></TR></TABLE><P>this message is posted when an OnSelectionChange event is to be fired</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="ColorHighlightAreaFieldType"><CODE><B>ColorHighlightAreaFieldType</B> : array [<A href="dcrHexEditor.htm#TMPHHightlightFieldType">TMPHHightlightFieldType</A>] of string  = ('?', '#BytesI', '#BytesE', '#Charsi', '#CharsE', 'AnsiText', 'UTF-16');</CODE></A></TD></TR></TABLE><P>&nbsp;</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHOffsetDec"><CODE><B>MPHOffsetDec</B>  = 'a:|';</CODE></A></TD></TR></TABLE><P>standard offset format: decimal</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHOffsetHex"><CODE><B>MPHOffsetHex</B>  = '-!10:0x|';</CODE></A></TD></TR></TABLE><P>standard offset format: hex, auto min width, prefixed by 0x</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHOffsetOct"><CODE><B>MPHOffsetOct</B>  = '0!8:o|';</CODE></A></TD></TR></TABLE><P>standard offset format: octal, suffixed by a small "o"</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHTranslationDesc"><CODE><B>MPHTranslationDesc</B> : array [<A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>] of string  = (<A href="dcrHexEditor.htm#MPH_TK_ASIS">MPH_TK_ASIS</A>, <A href="dcrHexEditor.htm#MPH_TK_DOS8">MPH_TK_DOS8</A>, <A href="dcrHexEditor.htm#MPH_TK_ASCII7">MPH_TK_ASCII7</A>, <A href="dcrHexEditor.htm#MPH_TK_MAC">MPH_TK_MAC</A>, <A href="dcrHexEditor.htm#MPH_TK_BCD38">MPH_TK_BCD38</A>, <A href="dcrHexEditor.htm#MPH_TK_CUSTOM">MPH_TK_CUSTOM</A>);</CODE></A></TD></TR></TABLE><P>long descriptions of the different translations (e.g. for menues)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHTranslationDescShort"><CODE><B>MPHTranslationDescShort</B> : array [<A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A>] of string  = (<A href="dcrHexEditor.htm#MPH_TK_ASIS_S">MPH_TK_ASIS_S</A>, <A href="dcrHexEditor.htm#MPH_TK_DOS8_S">MPH_TK_DOS8_S</A>, <A href="dcrHexEditor.htm#MPH_TK_ASCII7_S">MPH_TK_ASCII7_S</A>, <A href="dcrHexEditor.htm#MPH_TK_MAC_S">MPH_TK_MAC_S</A>, <A href="dcrHexEditor.htm#MPH_TK_BCD38_S">MPH_TK_BCD38_S</A>, <A href="dcrHexEditor.htm#MPH_TK_CUSTOM_S">MPH_TK_CUSTOM_S</A>);</CODE></A></TD></TR></TABLE><P>short descriptions of the different translations (e.g. for status bars)</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_CCONV_BCD38"><CODE><B>MPH_CCONV_BCD38</B> : <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConvebcdic cp38..ms ansi conversion</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_CCONV_MAC"><CODE><B>MPH_CCONV_MAC</B> : <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConvmacintosh..ms ansi conversion</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_FILEIO_BLOCKSIZE"><CODE><B>MPH_FILEIO_BLOCKSIZE</B>  = $F000;</CODE></A></TD></TR></TABLE><P>block size in file i/o</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_ASCII7"><CODE><B>MPH_TK_ASCII7</B>  = 'ASCII 7 bits';</CODE></A></TD></TR></TABLE><P>tkASCII</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_ASCII7_S"><CODE><B>MPH_TK_ASCII7_S</B>  = 'ASC';</CODE></A></TD></TR></TABLE><P>tkASCII</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_ASIS"><CODE><B>MPH_TK_ASIS</B>  = 'Windows';</CODE></A></TD></TR></TABLE><P>tkAsIs</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_ASIS_S"><CODE><B>MPH_TK_ASIS_S</B>  = 'WIN';</CODE></A></TD></TR></TABLE><P>tkAsIs</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_BCD38"><CODE><B>MPH_TK_BCD38</B>  = 'EBCDIC codepage 38';</CODE></A></TD></TR></TABLE><P>tkBCD</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_BCD38_S"><CODE><B>MPH_TK_BCD38_S</B>  = 'BCD';</CODE></A></TD></TR></TABLE><P>tkBCD</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_CUSTOM"><CODE><B>MPH_TK_CUSTOM</B>  = 'Custom translation';</CODE></A></TD></TR></TABLE><P>tkCustom</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_CUSTOM_S"><CODE><B>MPH_TK_CUSTOM_S</B>  = 'Cust';</CODE></A></TD></TR></TABLE><P>tkCustom</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_DOS8"><CODE><B>MPH_TK_DOS8</B>  = 'Dos 8 bits';</CODE></A></TD></TR></TABLE><P>tkDos8</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_DOS8_S"><CODE><B>MPH_TK_DOS8_S</B>  = 'DOS';</CODE></A></TD></TR></TABLE><P>tkDos8</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_MAC"><CODE><B>MPH_TK_MAC</B>  = 'Macintosh';</CODE></A></TD></TR></TABLE><P>tkMac</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_TK_MAC_S"><CODE><B>MPH_TK_MAC_S</B>  = 'MAC';</CODE></A></TD></TR></TABLE><P>tkMac</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_UC"><CODE><B>MPH_UC</B>  = 'Unicode little endian';</CODE></A></TD></TR></TABLE><P>unicode</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_UC_BE"><CODE><B>MPH_UC_BE</B>  = 'Unicode big endian';</CODE></A></TD></TR></TABLE><P>unicode be</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_UC_BE_S"><CODE><B>MPH_UC_BE_S</B>  = 'UCBE';</CODE></A></TD></TR></TABLE><P>unicode be</P><TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPH_UC_S"><CODE><B>MPH_UC_S</B>  = 'UCLE';</CODE></A></TD></TR></TABLE><P>unicode</P><H2>Variables</H2>
<H3>Overview</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><CODE><A href="#MPHCustomCharConv"><B>MPHCustomCharConv</B></A>: <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConv</A>;</CODE></TD></TR></TABLE><H3>Description</H3>
<TABLE cellspacing=1 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="MPHCustomCharConv"><CODE><B>MPHCustomCharConv</B>: <A href="dcrHexEditor.htm#TMPHCharConv">TMPHCharConv</A>;</CODE></A></TD></TR></TABLE><P>this character conversion is used in translations from tkAsIs to tkCustom (see <CODE><A href="dcrHexEditor.htm#TMPHTranslationKind">TMPHTranslationKind</A></CODE>)</P><H2>Author</H2>
<P>(C) markus stephany, <a href="http://launchpad.net/dcr">Delphi Code Revival</a>, all rights reserved.</P><H2>Last Modified</H2>
<P>07-10-2010
</P><HR noshade size=1><EM>Generated by <A href="http://www.yunqa.de/delphi/">DIPasDoc 0.8.10</A> on Do 07. Okt 2010 13:15:08</EM>
</BODY>
</HTML>
